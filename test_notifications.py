#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –º–Ω–æ–≥–æ–∫–∞–Ω–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π InBack
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É Email, Telegram –∏ WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

from app import app, db
from models import User, Manager
from email_service import send_notification, send_recommendation_email, send_saved_search_results_email
from whatsapp_integration import send_whatsapp_notification
import json

def test_email_notifications():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EMAIL –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===")
    
    with app.app_context():
        # –ù–∞–π—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.query.filter_by(email='admin@inback.ru').first()
        if not user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úì –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.full_name} ({user.email})")
        
        # 1. –¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞
        print("\n1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ...")
        try:
            from email_service import send_welcome_email
            result = send_welcome_email(user, base_url='https://inback.ru')
            print(f"   {'‚úì' if result else '‚ùå'} –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 2. –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\n2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
        try:
            recommendation_data = {
                'title': '–û—Ç–ª–∏—á–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –Ω–æ–≤–æ–º –ñ–ö',
                'item_name': '–ñ–ö "–°–æ–ª–Ω–µ—á–Ω—ã–π"',
                'description': '–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –ø–∞—Ä–∫. –û—Ç–¥–µ–ª–∫–∞ –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞, —Ä–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞.',
                'manager_name': '–î–µ–º–æ –ú–µ–Ω–µ–¥–∂–µ—Ä',
                'priority_text': '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'
            }
            result = send_recommendation_email(user, recommendation_data)
            print(f"   {'‚úì' if result else '‚ùå'} –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 3. –¢–µ—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
        print("\n3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...")
        try:
            search_data = {
                'search_name': '–ö–≤–∞—Ä—Ç–∏—Ä—ã –¥–æ 5 –º–ª–Ω –≤ —Ü–µ–Ω—Ç—Ä–µ',
                'properties_list': [
                    {'name': '–ñ–ö "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"', 'price': '4 500 000 ‚ÇΩ'},
                    {'name': '–ñ–ö "–ì–æ—Ä–æ–¥—Å–∫–æ–π"', 'price': '4 800 000 ‚ÇΩ'}
                ],
                'properties_count': 2,
                'search_url': 'https://inback.ru/properties?price_max=5000000'
            }
            result = send_saved_search_results_email(user, search_data)
            print(f"   {'‚úì' if result else '‚ùå'} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_telegram_notifications():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===")
    
    with app.app_context():
        # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID
        user = User.query.filter(User.telegram_id.isnot(None)).first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("   –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å Telegram –±–æ—Ç–æ–º")
            return
        
        print(f"‚úì –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.full_name} (Telegram: {user.telegram_id})")
        
        try:
            from email_service import send_telegram_notification
            
            # –¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            result = send_telegram_notification(user, 'welcome', base_url='https://inback.ru')
            print(f"   {'‚úì' if result else '‚ùå'} Telegram –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
            
            # –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendation_data = {
                'title': '–ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è',
                'item_name': '–ñ–ö "Telegram Test"',
                'manager_name': '–î–µ–º–æ –ú–µ–Ω–µ–¥–∂–µ—Ä'
            }
            result = send_telegram_notification(user, 'recommendation', **recommendation_data)
            print(f"   {'‚úì' if result else '‚ùå'} Telegram —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_whatsapp_notifications():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WHATSAPP –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===")
    
    with app.app_context():
        # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        user = User.query.filter(User.phone.isnot(None)).first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"‚úì –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.full_name} (–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone})")
        
        try:
            # –¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            message = f"""
üè† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ InBack!*

–ü—Ä–∏–≤–µ—Ç, {user.full_name.split()[0] if user.full_name else '–ö–ª–∏–µ–Ω—Ç'}!

–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö –ø—Ä—è–º–æ –≤ WhatsApp.

üí∞ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∫—ç—à–±–µ–∫
üèòÔ∏è –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è  
üìû –°–≤—è–∑—ã–≤–∞–π—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

*InBack.ru - –≤–∞—à –∫—ç—à–±–µ–∫-—Å–µ—Ä–≤–∏—Å*
            """
            
            result = send_whatsapp_notification(user.phone, message)
            print(f"   {'‚úì' if result else '‚ùå'} WhatsApp –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
            
            # –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendation_message = f"""
üè† *–ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞*

{user.full_name.split()[0] if user.full_name else '–ö–ª–∏–µ–Ω—Ç'}, –≤–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç:

üìã *–û—Ç–ª–∏—á–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ*
üè¢ –ñ–ö "WhatsApp Test"
üí∞ –ö—ç—à–±–µ–∫ –¥–æ 200 000 ‚ÇΩ

–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π!

*InBack.ru*
            """
            
            result = send_whatsapp_notification(user.phone, recommendation_message)
            print(f"   {'‚úì' if result else '‚ùå'} WhatsApp —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_unified_notifications():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ï–î–ò–ù–û–ô –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===")
    
    with app.app_context():
        user = User.query.filter_by(email='admin@inback.ru').first()
        if not user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úì –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è: {user.full_name}")
        
        try:
            # –¢–µ—Å—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            result = send_notification(
                recipient_email=user.email,
                subject="–¢–µ—Å—Ç –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
                message="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã",
                notification_type='general',
                user_id=user.id,
                base_url='https://inback.ru'
            )
            print(f"   {'‚úì' if result else '‚ùå'} –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def show_notification_settings():
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ===")
    
    with app.app_context():
        users = User.query.limit(5).all()
        
        for user in users:
            print(f"\nüë§ {user.full_name} ({user.email})")
            print(f"   üìß Email: {'‚úì' if getattr(user, 'email_notifications', True) else '‚ùå'}")
            print(f"   üì± Telegram: {'‚úì' if user.telegram_id else '‚ùå'} ({user.telegram_id or '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω'})")
            print(f"   üìû WhatsApp: {'‚úì' if user.phone else '‚ùå'} ({user.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'})")
            print(f"   üîî –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:")
            print(f"      - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {'‚úì' if getattr(user, 'notify_recommendations', True) else '‚ùå'}")
            print(f"      - –ü–æ–∏—Å–∫: {'‚úì' if getattr(user, 'notify_saved_searches', True) else '‚ùå'}")
            print(f"      - –ó–∞—è–≤–∫–∏: {'‚úì' if getattr(user, 'notify_applications', True) else '‚ùå'}")
            print(f"      - –ö—ç—à–±–µ–∫: {'‚úì' if getattr(user, 'notify_cashback', True) else '‚ùå'}")

if __name__ == '__main__':
    print("üîî –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô INBACK")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    show_notification_settings()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    test_email_notifications()
    test_telegram_notifications()
    test_whatsapp_notifications()
    test_unified_notifications()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ EMAIL_PASSWORD –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º")
    print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ TELEGRAM_BOT_TOKEN –¥–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ WHATSAPP_TOKEN –¥–ª—è WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("4. –ü—Ä–∏–≤—è–∂–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ Telegram –±–æ—Ç—É")
    print("5. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∫–∞–∑–∞–Ω—ã –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤")